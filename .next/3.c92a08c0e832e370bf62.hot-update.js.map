{"version":3,"sources":["webpack:///./pages/SimpleTable.js?a7fd"],"names":["styles","root","width","marginTop","theme","spacing","unit","overflowX","table","minWidth","id","createData","name","calories","fat","carbs","protein","data","SimpleTableUI","date","numCrcs","status","onClickTryAgain","classes","SimpleTable","propTypes","object","isRequired","componentWillMount","log","block","rest"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAMA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS;AAAA,SAAU;AACvBC,UAAM;AACJC,aAAO,MADH;AAEJC,iBAAWC,MAAMC,OAAN,CAAcC,IAAd,GAAqB,CAF5B;AAGJC,iBAAW;AAHP,KADiB;AAMvBC,WAAO;AACLC,gBAAU;AADL;AANgB,GAAV;AAAA,CAAf;;AAWA,IAAIC,KAAK,CAAT;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,KAAzC,EAAgDC,OAAhD,EAAyD;AACvDN,QAAM,CAAN;AACA,SAAO,EAAEA,MAAF,EAAME,UAAN,EAAYC,kBAAZ,EAAsBC,QAAtB,EAA2BC,YAA3B,EAAkCC,gBAAlC,EAAP;AACD;;AAED,IAAMC,OAAO,CACXN,WAAW,gBAAX,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,EAAvC,EAA2C,GAA3C,CADW,EAEXA,WAAW,oBAAX,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,EAA3C,EAA+C,GAA/C,CAFW,EAGXA,WAAW,QAAX,EAAqB,GAArB,EAA0B,IAA1B,EAAgC,EAAhC,EAAoC,GAApC,CAHW,EAIXA,WAAW,SAAX,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,EAAhC,EAAoC,GAApC,CAJW,EAKXA,WAAW,aAAX,EAA0B,GAA1B,EAA+B,IAA/B,EAAqC,EAArC,EAAyC,GAAzC,CALW,CAAb;AAOA,IAAMO,gBAAgB,wBAAWlB,MAAX,EACpB;AAAA,MAAGmB,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,MAAkBC,MAAlB,QAAkBA,MAAlB;AAAA,MAA0BC,eAA1B,QAA0BA,eAA1B;AAAA,MAA2CC,OAA3C,QAA2CA,OAA3C;AAAA,SACE;AAAA;AAAA,MAAO,WAAWA,QAAQtB,IAA1B;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,QAAO,WAAWsB,QAAQf,KAA1B;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAEE;AAAA;AAAA,cAAW,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF;AAGE;AAAA;AAAA,cAAW,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AADF,OADF;AAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AADF,GADF;AAAA,CADoB,CAAtB;;AAqCAgB,YAAYC,SAAZ,GAAwB;AACtBF,WAAS,oBAAUG,MAAV,CAAiBC;AADJ,CAAxB;;AAIA,IAAMH,cAAc,wBAClB,0BAAU;AACRI,oBADQ,gCACa;AACnB;AACA;AACA;AACA;AACA;AACD;AAPO,CAAV,CADkB,EAUlB,yBAAS;AAAA,MAAGC,GAAH,SAAGA,GAAH;AAAA,MAAQC,KAAR,SAAQA,KAAR;AAAA,MAAkBC,IAAlB;;AAAA;AACP;AACA;AACAV,YAAQ;AAHD,KAIJU,IAJI;AAAA,CAAT,CAVkB,EAgBlBb,aAhBkB,CAApB;;eAkBeM,W;;;;;;;;;;;;;0BAnFTxB,M;0BAWFU,E;0BACKC,U;0BAKHM,I;0BAOAC,a;0BAyCAM,W","file":"3.c92a08c0e832e370bf62.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport Table, {\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from 'material-ui/Table';\nimport Paper from 'material-ui/Paper';\nimport getState from '../index';\nimport { compose, lifecycle, mapProps } from 'recompose';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n\nconst data = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\nconst SimpleTableUI = withStyles(styles)(\n  ({ date, numCrcs, status, onClickTryAgain, classes }) => (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell numeric>Type</TableCell>\n            <TableCell numeric>Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {/* {console.log(getState())} */}\n          {/* {cs &&\n            cs.map(n => {\n              // <TableRow key={n.id}>\n              //   <TableCell>{n.name}</TableCell>\n              //   <TableCell numeric>{n.calories}</TableCell>\n              //   <TableCell numeric>{n.fat}</TableCell>\n              // </TableRow>\n              console.log('n.state', n.state);\n              return (\n                n.state[0] && (\n                  <div>\n                    <div> {n.contractName} </div>\n                    <div> {n.state[0].name} </div>\n                    <div> {n.state[0].value} </div>\n                  </div>\n                )\n              );\n            })} */}\n        </TableBody>\n      </Table>\n    </Paper>\n  )\n);\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst SimpleTable = compose(\n  lifecycle({\n    componentWillMount() {\n      // web3.eth.getBlock(this.props.log.blockNumber, (err, block) => {\n      //   this.setState({\n      //     block,\n      //   });\n      // });\n    },\n  }),\n  mapProps(({ log, block, ...rest }) => ({\n    // date: block ? moment(new Date(block.timestamp * 1000)).format('LL') : null,\n    // numCrcs: Web3.fromWei(log.args.value).toString(),\n    status: 'success',\n    ...rest,\n  }))\n)(SimpleTableUI);\n\nexport default SimpleTable;\n\n\n\n// WEBPACK FOOTER //\n// ./pages/SimpleTable.js"],"sourceRoot":""}