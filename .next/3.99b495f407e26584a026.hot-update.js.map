{"version":3,"sources":["webpack:///./pages/SimpleTable.js?a7fd"],"names":["styles","root","width","table","maxWidth","id","createData","name","calories","fat","carbs","protein","data","SimpleTableUI","contractStates","classes","map","console","log","n","state","length","contractName","e","value","type","toString","propTypes","object","isRequired","SimpleTable","componentWillReceiveProps","getContractState","contractState","contractFunc","test","setState","props","forceUpdate"],"mappings":"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","file":"3.99b495f407e26584a026.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport Table, {\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from 'material-ui/Table';\nimport { Card, CardContent, Typography } from 'material-ui';\nimport Paper from 'material-ui/Paper';\nimport getState from '../index';\nimport { compose, lifecycle, mapProps } from 'recompose';\nimport { Wallet, web3 } from '../lib/contracts';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  table: {\n    maxWidth: 400,\n  },\n});\n\nlet id = 0;\nfunction createData(name, calories, fat, carbs, protein) {\n  id += 1;\n  return { id, name, calories, fat, carbs, protein };\n}\n\nconst data = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst SimpleTableUI = withStyles(styles)(({ contractStates, classes }) => (\n  <div className={classes.root}>\n    {contractStates &&\n      contractStates.map(n => {\n        console.log('contractStates', contractStates);\n        console.log('n.state', n.state.length);\n        return (\n          <Card>\n            <CardContent>\n              <Table className={classes.table}>\n                <TableHead>\n                  <Typography variant=\"title\">{n.contractName}</Typography>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {n.state.map(e => {\n                    console.log('e.value ', e.value);\n                    return (\n                      <TableRow key={e.name}>\n                        <TableCell>{e.name}</TableCell>\n                        <TableCell numeric>{e.type}</TableCell>\n                        <TableCell numeric>{e.value.toString()}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        );\n      })}\n  </div>\n));\n\nSimpleTableUI.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst SimpleTable = compose(\n  lifecycle({\n    async componentWillReceiveProps() {\n      const contractState = await Wallet.getContractState();\n      const test = await Wallet.contractFunc('States._string')();\n      await this.setState({\n        contractStates: contractState,\n      });\n      console.log('received props for table', this.props);\n      console.log('test', test);\n\n      await this.forceUpdate();\n\n      // web3.eth.getBlock(this.props.log.blockNumber, (err, block) => {\n      //   this.setState({\n      //     block,\n      //   });\n      // });\n    },\n  }),\n  mapProps(({ contractStates }) => {\n    console.log('mapping props', contractStates[0]);\n    return {\n      // date: block ? moment(new Date(block.timestamp * 1000)).format('LL') : null,\n      // numCrcs: Web3.fromWei(log.args.value).toString(),\n      contractStates,\n    };\n  })\n)(SimpleTableUI);\n\nexport default SimpleTable;\n\n\n\n// WEBPACK FOOTER //\n// ./pages/SimpleTable.js"],"sourceRoot":""}