{"version":3,"sources":["webpack:///./lib/contracts.js?58f7"],"names":["Promise","resolve","reject","web3","version","getNetwork","error","networkId","getNetworkId","path","getEtherscanURL","States","MoreStates","contracts","providerPromise","setProviders","global","Object","values","forEach","_contract","setProvider","currentProvider","console","log","Error","process","browser","document","readyState","addEventListener","setTimeout","Wallet","address","wallet","update","getEthAccounts","accounts","withAddress","eth","getAccounts","err","res","contractName","deployed","getContractAddress","getContract","stateNamesAndVals","contractStates","abi","type","constant","stateValue","contractFunc","name","outputs","value","push","create","state","args","contractDotFunc","split","funcName","Contract","call"],"mappings":"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","file":"3.6415d2cd0401ef46d91e.hot-update.js","sourcesContent":["import contract from 'truffle-contract';\nimport StatesArtifact from '../build/contracts/States.json';\nimport MoreStatesArtifact from '../build/contracts/MoreStates.json';\nimport { setupWeb3 } from './web3';\nimport truffleConfig from '../truffle';\nimport { promisify } from 'es6-promisify';\n\nconst States = contract(StatesArtifact);\nconst MoreStates = contract(MoreStatesArtifact);\nconst contracts = {\n  States,\n  MoreStates,\n};\n\nexport const web3 = setupWeb3();\n\nconst providerPromise = new Promise((resolve, reject) => {\n  function setProviders() {\n    if (global.web3) {\n      Object.values(contracts).forEach(_contract => {\n        _contract.setProvider(global.web3.currentProvider);\n      });\n      resolve({ contracts });\n    } else {\n      console.log(\n        'no web3 available in browser. Metamask probably not installed'\n      );\n      reject(\n        new Error(\n          'no web3 available in browser. Metamask probably not installed'\n        )\n      );\n    }\n  }\n  if (process.browser) {\n    console.log('process.brows: ');\n    if (global.document.readyState === 'complete') {\n      setProviders();\n    } else {\n      global.addEventListener('load', setProviders);\n    }\n    setTimeout(() => {\n      reject(new Error('timed out waiting for load event to trigger'));\n    }, 5000);\n  } else {\n    setProviders();\n    // resolve({ contracts });\n  }\n});\n\nexport async function getNetworkId() {\n  return new Promise((resolve, reject) => {\n    web3.version.getNetwork((error, networkId) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(networkId);\n      }\n    });\n  });\n}\n\nexport async function getEtherscanURL(path) {\n  const networkId = await getNetworkId();\n\n  return `https://etherscan.io${path}`;\n}\n\nexport class Wallet {\n  static async withAddress(address) {\n    const wallet = new Wallet(address);\n    await wallet.update();\n    return wallet;\n  }\n  static async getDefault() {\n    const accounts = await Wallet.getEthAccounts();\n    return Wallet.withAddress(accounts[0]);\n  }\n  static getEthAccounts() {\n    return new Promise((resolve, reject) => {\n      web3.eth.getAccounts((err, res) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      });\n    });\n  }\n\n  static async getContract(contractName) {\n    await providerPromise;\n    return contracts[contractName].deployed();\n  }\n\n  getContractAddress = async contractName => {\n    const _contract = await Wallet.getContract(contractName);\n    return _contract.address;\n  };\n\n  static contractFunc = contractDotFunc => async (...args) => {\n    const [contractName, funcName] = contractDotFunc.split('.');\n    const Contract = await Wallet.getContract(contractName);\n    return args ? Contract[funcName](...args) : Contract[funcName].call();\n  };\n\n  constructor(address) {\n    this.address = address;\n  }\n\n  async update() {}\n\n  static getContractState() {\n    let stateNamesAndVals = [];\n    const contractStates = [];\n\n    Object.values(contracts).forEach(_contract => {\n      Object.values(_contract.abi).forEach(async abi => {\n        if (abi.type === 'function' && abi.constant) {\n          try {\n            const stateValue = this.contractFunc(\n              `${_contract.contractName}.${abi.name}`\n            )();\n            stateNamesAndVals.push({\n              name: abi.name,\n              type: abi.outputs[0].type,\n              value: await stateValue,\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        }\n        return stateNamesAndVals;\n      });\n      contractStates.push(\n        Object.create({\n          contractName: _contract.contractName,\n          state: stateNamesAndVals,\n        })\n      );\n      stateNamesAndVals = [];\n      return contractStates;\n    });\n\n    return contractStates;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/contracts.js"],"sourceRoot":""}