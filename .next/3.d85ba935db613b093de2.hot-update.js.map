{"version":3,"sources":["webpack:///./pages/SimpleTable.js?a7fd"],"names":["styles","root","width","table","maxWidth","SimpleTableUI","contractStates","classes","console","debug","map","n","contractName","state","e","name","type","value","toString","propTypes","object","isRequired","SimpleTable","componentWillReceiveProps","props","setState","forceUpdate"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAMA;;AACA;;AAOA;;;;;;;;;;AAEA,IAAMA,SAAS,SAATA,MAAS;AAAA,SAAU;AACvBC,UAAM;AACJC,aAAO;AADH,KADiB;AAIvBC,WAAO;AACLC,gBAAU;AADL;AAJgB,GAAV;AAAA,CAAf;;AASA,IAAMC,gBAAgB,wBAAWL,MAAX,EAAmB,gBAAiC;AAAA,MAA9BM,cAA8B,QAA9BA,cAA8B;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACxEC,UAAQC,KAAR,CAAc,WAAd;AACA,SACE;AAAA;AAAA,MAAK,WAAWF,QAAQN,IAAxB;AAAA;AAAA;AAAA;AAAA;AACGK,sBACCA,eAAeI,GAAf,CAAmB;AAAA,aACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,cAAO,WAAWH,QAAQJ,KAA1B;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA,kBAAY,SAAQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAA6BQ,kBAAEC;AAA/B,eADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAFF,aADF;AASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACGD,gBAAEE,KAAF,CAAQH,GAAR,CAAY;AAAA,uBACX;AAAA;AAAA,oBAAU,KAAKI,EAAEC,IAAjB;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAYD,sBAAEC;AAAd,mBADF;AAEE;AAAA;AAAA,sBAAW,aAAX;AAAA;AAAA;AAAA;AAAA;AAAoBD,sBAAEE;AAAtB,mBAFF;AAGE;AAAA;AAAA,sBAAW,aAAX;AAAA;AAAA;AAAA;AAAA;AAAoBF,sBAAEG,KAAF,CAAQC,QAAR;AAApB;AAHF,iBADW;AAAA,eAAZ;AADH;AATF;AADF;AADF,OADiB;AAAA,KAAnB;AAFJ,GADF;AA8BD,CAhCqB,CAAtB;;AAkCAb,cAAcc,SAAd,GAA0B;AACxBZ,WAAS,oBAAUa,MAAV,CAAiBC;AADF,CAA1B;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAMC,cAAc,wBAClB,0BAAU;AACRC,2BADQ,qCACkBC,KADlB,EACyB;AAC/B,QAAMlB,iBAAiBkB,MAAMlB,cAA7B;AACA,SAAKmB,QAAL,CAAc;AACZnB;AADY,KAAd;;AAIA,SAAKoB,WAAL;AACD;AARO,CAAV,CADkB,EAWlBrB,aAXkB,CAApB;AAYAiB,YAAYH,SAAZ,GAAwB;AACtBZ,WAAS,oBAAUa,MAAV,CAAiBC;AADJ,CAAxB;;eAIeC,W;;;;;;;;;;;;;0BApHTtB,M;0BASAK,a;0BA2FAiB,W","file":"3.d85ba935db613b093de2.hot-update.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport Table, {\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from 'material-ui/Table';\nimport { Card, CardContent, Typography } from 'material-ui';\nimport {\n  compose,\n  lifecycle,\n  mapProps,\n  shouldUpdate,\n  shallowEqual,\n} from 'recompose';\nimport { Wallet } from '../lib/contracts';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  table: {\n    maxWidth: 400,\n  },\n});\n\nconst SimpleTableUI = withStyles(styles)(({ contractStates, classes }) => {\n  console.debug('render ui');\n  return (\n    <div className={classes.root}>\n      {contractStates &&\n        contractStates.map(n => (\n          <Card>\n            <CardContent>\n              <Table className={classes.table}>\n                <TableHead>\n                  <Typography variant=\"title\">{n.contractName}</Typography>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Value</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {n.state.map(e => (\n                    <TableRow key={e.name}>\n                      <TableCell>{e.name}</TableCell>\n                      <TableCell numeric>{e.type}</TableCell>\n                      <TableCell numeric>{e.value.toString()}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        ))}\n    </div>\n  );\n});\n\nSimpleTableUI.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// function shallowEqual(objA, objB) {\n//   // console.log('entering hte shallow equal');\n//   if (objA === objB) {\n//     console.log(objA, objB);\n//     return true;\n//   }\n\n//   if (\n//     typeof objA !== 'object' ||\n//     objA === null ||\n//     typeof objB !== 'object' ||\n//     objB === null\n//   ) {\n//     console.log(\n//       typeof objA !== 'object',\n//       objA === null,\n//       typeof objB !== 'object',\n//       objB === null,\n//       objA,\n//       objB\n//     );\n//     return false;\n//   }\n\n//   const keysA = Object.keys(objA);\n//   const keysB = Object.keys(objB);\n\n//   if (keysA.length !== keysB.length) {\n//     console.log(keysA.length, keysB.length);\n//     return false;\n//   }\n\n//   // Test for A's keys different from B.\n//   const bHasOwnProperty = hasOwnProperty.bind(objB);\n//   for (let i = 0; i < keysA.length; i++) {\n//     if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n//       // console.log(\n//       //   'returning false i guess',\n//       //   bHasOwnProperty(keysA[i]),\n//       //   objA[keysA[i]],\n//       //   objB[keysA[i]]\n//       // );\n//       return false;\n//     }\n//   }\n//   console.log('returning true i guess');\n//   return true;\n// }\n\n// function shallowCompare(instance, nextProps) {\n//   return shallowEqual(instance, nextProps);\n// }\n\nconst SimpleTable = compose(\n  lifecycle({\n    componentWillReceiveProps(props) {\n      const contractStates = props.contractStates;\n      this.setState({\n        contractStates,\n      });\n\n      this.forceUpdate();\n    },\n  })\n)(SimpleTableUI);\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default SimpleTable;\n\n\n\n// WEBPACK FOOTER //\n// ./pages/SimpleTable.js"],"sourceRoot":""}